name: File changes
on:
   push:
      branches:
        - main
jobs:
  create-file:
    name: Create file
    runs-on: ubuntu-latest
    steps:
       - uses: actions/checkout@v3
       - uses: actions/cache@v3
         id: restore-build
         with:
           path: ./*
           key: layer-cache
       - run: |
          curl https://examples.onelinerhub.com/file.zip -o tmp.zip && unzip tmp.zip && rm tmp.zip    
       - run: ls -la
       - run: echo ${{ github.ref_name}}
  call-workflow:
    name: call workflow
    needs: create-file
    uses: ./.github/workflows/reusable-workflow.yml
  cleanup:
    runs-on: ubuntu-latest
    needs: call-workflow
    steps:
        - name: Check out code
          uses: actions/checkout@v3
            
        - name: Cleanup
          run: |
              gh extension install actions/gh-actions-cache
              
              REPO=${{ github.repository }}
              BRANCH="${{ github.ref_name }}"
    
              echo "Fetching list of cache key"
              cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )
    
              ## Setting this to not fail the workflow while deleting cache keys. 
              set +e
              echo "Deleting caches..."
              for cacheKey in $cacheKeysForPR
              do
                  gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
              done
              echo "Done"
          env:
            GH_TOKEN: ${{ secrets.PAT }}  
  changelog:
    runs-on: ubuntu-latest
    needs: cleanup
    outputs:
        CHANGELOG: ${{ steps.init.outputs.CHANGELOG }}
    steps:
        - name: Check out code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Changelog
          id: init
          run: |
           changelog=$(git log --oneline --no-decorate)
           echo $changelog
           changelog="${changelog//'%'/'%25'}"
           changelog="${changelog//$'\n'/'%0A' - }"
           changelog=" - ${changelog//$'\r'/'%0D'}"
           echo "CHANGELOG=$changelog" >>$GITHUB_OUTPUT
  print:
    runs-on: ubuntu-latest
    needs: changelog
    steps:
        - name: Initialize mandatory git config
          run: |
           git config user.name "GitHub Actions"
           git config user.email noreply@github.com  
        - name: Check out code
          uses: actions/checkout@v3
        - run: |
           echo ${{ needs.changelog.outputs.CHANGELOG }} > data.txt
           git add data.txt
           git commit --message "changelog"
           git push 

            