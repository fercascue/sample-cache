name: File changes
on:
   push:
      branches:
        - main
jobs:
  activate-workflow-layer:
    name: Detect layer changes
    runs-on: ubuntu-latest
    outputs:
        file_changes: ${{ steps.changed-files-dir-names.outputs.all_changed_files }}
    steps: 
      - uses: actions/checkout@v3   
      - name: Run changed-files with dir_names for layers
        id: changed-files-dir-names
        uses: tj-actions/changed-files@v35
        with:
          dir_names: true
          json: true
          base_sha: ${{ github.base_ref }}
          json_raw_format: true
          files_ignore: .github
          files: layer*         
      - name: List all changed files
        run: echo ${{ steps.changed-files-dir-names.outputs.all_changed_files }}
  check-changes-layer:
    name: check changes in specific folder
    needs: activate-workflow-layer
    if: ${{ needs.activate-workflow-layer.outputs.file_changes != '[]' }}
    strategy:
      matrix:
       version: ${{ fromJSON(needs.activate-workflow-layer.outputs.file_changes) }}
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      resource: ${{ (matrix.version) }}  
  activate-workflow-lambda:
    runs-on: ubuntu-latest
    needs: check-changes-layer
    if: |
       always() && 
       (needs.check-changes-layer.result == 'success' || needs.check-changes-layer.result == 'skipped') 
    outputs:
        lambda_changes: ${{ steps.changed-files-dir-names.outputs.all_changed_files }}
    steps: 
      - uses: actions/checkout@v3   
      - name: Run changed-files with dir_names
        id: changed-files-dir-names
        uses: tj-actions/changed-files@v35
        with:
          dir_names: true
          json: true
          base_sha: ${{ github.base_ref }}
          json_raw_format: true
          files_ignore: |
                .github
                layer*
      - name: List all changed files
        run: echo ${{ steps.changed-files-dir-names.outputs.all_changed_files }}  
  dowload-layer:
    name: Download layer to cache
    runs-on: ubuntu-latest
    needs: activate-workflow-lambda
    if: |
       always() &&
       ${{ needs.activate-workflow-lambda.outputs.lambda_changes != '[]' }}
    steps:
       - uses: actions/checkout@v3
       - run: echo  ${{ needs.activate-workflow-lambda.outputs.lambda_changes == '[]'}}
       - run: |
             mkdir /tmp/files
             cd /tmp/files
             curl https://examples.onelinerhub.com/file.zip -o tmp.zip && unzip tmp.zip && rm tmp.zip 
             ls -la
       - name: Cache Primes
         id: restore-build
         uses: actions/cache@v3
         with:
          path: /tmp/files
          key: layer-cache    
       - run: echo ${{ github.ref_name}}
  
  call-workflow:
    name: call workflow for lambda
    needs: [dowload-layer, activate-workflow-lambda]
    if: |
       always() &&
       ${{ needs.activate-workflow-lambda.outputs.lambda_changes != '[]' }}
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      resource: 'lambda1'
  cleanup:
    runs-on: ubuntu-latest
    needs: call-workflow
    steps:
        - name: Check out code
          uses: actions/checkout@v3
            
        - name: Cleanup
          run: |
              gh extension install actions/gh-actions-cache
              
              REPO=${{ github.repository }}
              BRANCH="${{ github.ref_name }}"
    
              echo "Fetching list of cache key"
              cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )
    
              ## Setting this to not fail the workflow while deleting cache keys. 
              set +e
              echo "Deleting caches..."
              for cacheKey in $cacheKeysForPR
              do
                  gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
              done
              echo "Done"
          env:
            GH_TOKEN: ${{ secrets.PAT }}  
  